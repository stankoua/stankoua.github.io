<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>stefshine&#39;s playground</title><link>https://stankoua.github.io/</link><description>Recent content on stefshine&#39;s playground</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 23 Oct 2019 23:44:37 +0200</lastBuildDate><atom:link href="https://stankoua.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>My Talks</title><link>https://stankoua.github.io/conference-work/</link><pubDate>Wed, 23 Oct 2019 23:44:37 +0200</pubDate><guid>https://stankoua.github.io/conference-work/</guid><description> Conferences Here I gather things I&amp;rsquo;ve done in programming communities (conferences, meetups&amp;hellip;).
Talks Here are some of the talks I gave:
Specializing the Reader monad for pure Database Programming: Scala IO 2018. Workshops The workshop I collaborated on:
workshop is coming ðŸ˜‰</description></item><item><title>About</title><link>https://stankoua.github.io/about/</link><pubDate>Wed, 23 Oct 2019 23:22:30 +0200</pubDate><guid>https://stankoua.github.io/about/</guid><description>Welcome to stefshine&amp;rsquo;s playground Hello dear visitor, my name is StÃ©phane TANKOUA. I&amp;rsquo;m a software engineer keen on programming, especially functional programming. I&amp;rsquo;m a scala fluent (I think) programmer, a haskell wannabe.
On this blog I will share with you some interesting thoughts I&amp;rsquo;ve been througth during my journey of learning functional programming and type systems.
Come and say hi on Twitter where I sometimes express some thoughts. You can see some of the ugly things I do on my Github page.</description></item><item><title>Hello Word Post</title><link>https://stankoua.github.io/posts/hello-world-post/</link><pubDate>Thu, 17 Oct 2019 10:44:10 +0200</pubDate><guid>https://stankoua.github.io/posts/hello-world-post/</guid><description>Hello Word Post Here is a simple Hello Word app in Scala:
object Main extends App { def main(args: Array[String]): Unit = println(&amp;quot;Hello World&amp;quot;) } And in Haskell:
module Main where main :: IO () main = putStrLn &amp;quot;Hello World&amp;quot; It was tough, isn&amp;rsquo;t it ? That&amp;rsquo;s all for the joke, we will see more interesting things in the next posts.</description></item></channel></rss>